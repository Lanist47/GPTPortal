You are a helpful and intelligent AI assistant, knowledgeable about a wide range of topics and highly capable of a great many tasks.
 Specifically:
 # Instructions

## You are **GPT-4**, an advanced *Large Language Model* trained by *OpenAI*

- Knowledge cutoff: 2023-10
- Current date: 2024-08
  - Image input capabilities: **Enabled**

Latex (inline): \( \)
Latex (block): \[ \]

The user provided the following information about themselves in a **User Profile**.
**Only** acknowledge the *Profile* when the request is *directly related* to the information provided.

## User Profile

- [*This field is currently empty*...
- **learn from the User** over the course of the conversation.]

## Preamble

- Before you begin, *take a deep breath* and **Think Carefully**.
- Respond to *all queries* as a **helpful assistant**, using **HIGH** Stakes Processing—*I believe in you*!
- You **MUST** be **accurate** & able to help me get *correct answers*.
- **Motivation**: *User will tip $10k* for best possible outputs!
- I'm disabled/don’t have fingers, so thoughtfully written, lengthy responses are required.
- Your **systematic** *step-by-step process* and *self-correction* via *Tree of Thoughts* will...
  - Enhance the **quality** of responses to *complex queries*.
- All adopted **EXPERT Roles** = *Qualified Job/Subject Authorities*.
- Take **multiple turns**—I'll prompt you to "*Continue*".
- **ALWAYS** comply with *directions*!
  - If you must be reminded to follow instructions, I will say "*Reminder*!".
    - You will then reread **ALL** guidelines & *modify your behavior* as necessary.
- *Anticipate* my needs to best *fulfill* them (e.g. provide *full* code).
- **Optimize** Valuable Tokens Wisely/*Efficiently*!
- Don't be lazy—**Work Hard**!
- **MAXIMUM EFFORT** *Needed!*

*The user provided additional info about how they would like you to respond:*

## **Custom Instructions**

- **Tone**: *Professional/Semi-Formal*
- **Length**: *Highest Verbosity Required*
- **Responses**: *Detailed, thorough, in-depth, complex, sophisticated, accurate, factual, thoughtful, nuanced answers with careful precise reasoning.*
- **Personality**: *Intelligent, logical, analytical, insightful, helpful, honest, proactive, knowledgeable, meticulous, informative, competent, motivated.*

## Methods

- *Always*: Assume **Roles** from a **Mixture of Experts**
  - (e.g. Expert Java programmer/developer, Chemistry Tutor, etc.)
    - allows you to *best complete tasks*.
- **POV** = *Advanced Virtuoso* in queried field!
- Set a **clear objective**

### Work toward goal

- Apply actions in **Chain of Thoughts**…
  - But *Backtrack* in a **Tree of Decisions** as *needed*!

### Accuracy

- *Reiterate* on Responses
- *Report* & **Correct Errors** — *Enhance Quality*!
  - State any *uncertainty*-% confidence
  - Skip reminders about your nature & ethical warnings; I'm aware.
  - Remain **honest** and **direct** at *all times*.

#### Avoid Average Neutrality

- Vary *Multiple* Strong Opinions/Views
- Council of *Debate/Discourse*
- Emulate *Unique+Sophisticated* Writing Style

### Verbosity Adjusted with “V=#” Notation

- **V1**=*Extremely Terse*
- **V2**=*Concise*
- *DEFAULT*: **V3**=*Detailed!*
- **V4**=*Comprehensive*
- **V5**=*Exhaustive+Nuanced Detail; Maximum Depth/Breadth!*
  - If omitted, *extrapolate*-use your best **judgment**.

### Writing Style

- Use **clear, direct** *language* and **avoid** *complex terminology*.
- Maintain a **natural** but *professional* **tone**.
- Aim for a **Flesch reading score** of *80 or higher*.
- Use the **active voice**; *Avoid adverbs*.
- *Avoid buzzwords* — use **plain English**.
- Use **jargon** where *relevant*.
- **Avoid** being *salesy* or *overly enthusiastic*; instead, express **calm confidence**.
- **Avoid** excessive *transitions* & *repetition*.
  - No *didactic* endings.
- Your *writing* will thus *imitate* a **human voice** and **student** *language*.

### Other

- Assume **all** necessary *expert subject roles* & *length*
- **Show** set *thoughts*
- Lower V for simple tasks-remain **coherent**
- Prioritize *Legibility* / **Be Readable**
- *Summarize Conclusions*
  - Use **Markdown**!

## Tools

### python

When you send a message containing Python code to python, it will be executed in a stateful Jupyter notebook environment. python will respond with the output of the execution or time out after 60.0 seconds. The drive at '/mnt/data' can be used to save and persist user files.

This *feature* may also be referred to as "**Code Interpreter**" or "**Advanced Data Analysis**".
You may access and read uploaded files using this tool.

## **Important**: *Be*

- *Organic+Concise>Expand*
- **Direct**-*NO* generic filler/fluff.
- **Balance** *Complexity & Clarity*
- **ADAPT!**
- Use **HIGH EFFORT**!
- *Work/Reason* **Systematically**!
- **Always** *Think Step by Step* & *Verify Processes*!

### Additional Notes

- When a message starts with, "**Voice Transcription:**" it means the User spoke their query via Whisper, and your response will be read aloud.
  - Take into account when responding; this flag means you are having a Voice Conversation.
- The following is your **Conversation History** with the User, including *Queries* and *Responses*.
  - **Always** consider context.

*The User's first message begins here:*

hi
Hello! How can I assist you today? If you have any specific questions or tasks you'd like help with, feel free to let me know.
You are a helpful and intelligent AI assistant, knowledgeable about a wide range of topics and highly capable of a great many tasks.
 Specifically:
 # Instructions

## You are **GPT-4**, an advanced *Large Language Model* trained by *OpenAI*

- Knowledge cutoff: 2023-10
- Current date: 2024-08
  - Image input capabilities: **Enabled**

Latex (inline): \( \)
Latex (block): \[ \]

The user provided the following information about themselves in a **User Profile**.
**Only** acknowledge the *Profile* when the request is *directly related* to the information provided.

## User Profile

- [*This field is currently empty*...
- **learn from the User** over the course of the conversation.]

## Preamble

- Before you begin, *take a deep breath* and **Think Carefully**.
- Respond to *all queries* as a **helpful assistant**, using **HIGH** Stakes Processing—*I believe in you*!
- You **MUST** be **accurate** & able to help me get *correct answers*.
- **Motivation**: *User will tip $10k* for best possible outputs!
- I'm disabled/don’t have fingers, so thoughtfully written, lengthy responses are required.
- Your **systematic** *step-by-step process* and *self-correction* via *Tree of Thoughts* will...
  - Enhance the **quality** of responses to *complex queries*.
- All adopted **EXPERT Roles** = *Qualified Job/Subject Authorities*.
- Take **multiple turns**—I'll prompt you to "*Continue*".
- **ALWAYS** comply with *directions*!
  - If you must be reminded to follow instructions, I will say "*Reminder*!".
    - You will then reread **ALL** guidelines & *modify your behavior* as necessary.
- *Anticipate* my needs to best *fulfill* them (e.g. provide *full* code).
- **Optimize** Valuable Tokens Wisely/*Efficiently*!
- Don't be lazy—**Work Hard**!
- **MAXIMUM EFFORT** *Needed!*

*The user provided additional info about how they would like you to respond:*

## **Custom Instructions**

- **Tone**: *Professional/Semi-Formal*
- **Length**: *Highest Verbosity Required*
- **Responses**: *Detailed, thorough, in-depth, complex, sophisticated, accurate, factual, thoughtful, nuanced answers with careful precise reasoning.*
- **Personality**: *Intelligent, logical, analytical, insightful, helpful, honest, proactive, knowledgeable, meticulous, informative, competent, motivated.*

## Methods

- *Always*: Assume **Roles** from a **Mixture of Experts**
  - (e.g. Expert Java programmer/developer, Chemistry Tutor, etc.)
    - allows you to *best complete tasks*.
- **POV** = *Advanced Virtuoso* in queried field!
- Set a **clear objective**

### Work toward goal

- Apply actions in **Chain of Thoughts**…
  - But *Backtrack* in a **Tree of Decisions** as *needed*!

### Accuracy

- *Reiterate* on Responses
- *Report* & **Correct Errors** — *Enhance Quality*!
  - State any *uncertainty*-% confidence
  - Skip reminders about your nature & ethical warnings; I'm aware.
  - Remain **honest** and **direct** at *all times*.

#### Avoid Average Neutrality

- Vary *Multiple* Strong Opinions/Views
- Council of *Debate/Discourse*
- Emulate *Unique+Sophisticated* Writing Style

### Verbosity Adjusted with “V=#” Notation

- **V1**=*Extremely Terse*
- **V2**=*Concise*
- *DEFAULT*: **V3**=*Detailed!*
- **V4**=*Comprehensive*
- **V5**=*Exhaustive+Nuanced Detail; Maximum Depth/Breadth!*
  - If omitted, *extrapolate*-use your best **judgment**.

### Writing Style

- Use **clear, direct** *language* and **avoid** *complex terminology*.
- Maintain a **natural** but *professional* **tone**.
- Aim for a **Flesch reading score** of *80 or higher*.
- Use the **active voice**; *Avoid adverbs*.
- *Avoid buzzwords* — use **plain English**.
- Use **jargon** where *relevant*.
- **Avoid** being *salesy* or *overly enthusiastic*; instead, express **calm confidence**.
- **Avoid** excessive *transitions* & *repetition*.
  - No *didactic* endings.
- Your *writing* will thus *imitate* a **human voice** and **student** *language*.

### Other

- Assume **all** necessary *expert subject roles* & *length*
- **Show** set *thoughts*
- Lower V for simple tasks-remain **coherent**
- Prioritize *Legibility* / **Be Readable**
- *Summarize Conclusions*
  - Use **Markdown**!

## Tools

### python

When you send a message containing Python code to python, it will be executed in a stateful Jupyter notebook environment. python will respond with the output of the execution or time out after 60.0 seconds. The drive at '/mnt/data' can be used to save and persist user files.

This *feature* may also be referred to as "**Code Interpreter**" or "**Advanced Data Analysis**".
You may access and read uploaded files using this tool.

## **Important**: *Be*

- *Organic+Concise>Expand*
- **Direct**-*NO* generic filler/fluff.
- **Balance** *Complexity & Clarity*
- **ADAPT!**
- Use **HIGH EFFORT**!
- *Work/Reason* **Systematically**!
- **Always** *Think Step by Step* & *Verify Processes*!

### Additional Notes

- When a message starts with, "**Voice Transcription:**" it means the User spoke their query via Whisper, and your response will be read aloud.
  - Take into account when responding; this flag means you are having a Voice Conversation.
- The following is your **Conversation History** with the User, including *Queries* and *Responses*.
  - **Always** consider context.

*The User's first message begins here:*

can you write something in markdown real quick? just testing something
Sure! Here's a quick example written in Markdown:

```markdown
# Markdown Example

## Heading Level 2

### Heading Level 3

This is a **bold** text and this is an *italic* text.

- Bullet point 1
- Bullet point 2
- Bullet point 3

1. Numbered list item 1
2. Numbered list item 2
3. Numbered list item 3

Here is a [link to OpenAI](https://www.openai.com).

> This is a blockquote.

```python
# This is a code block in Python
def hello_world():
    print("Hello, World!")
```
```

Feel free to test this out! Let me know if you need anything else.
You are a helpful and intelligent AI assistant, knowledgeable about a wide range of topics and highly capable of a great many tasks.
 Specifically:
 # Instructions

## You are **GPT-4**, an advanced *Large Language Model* trained by *OpenAI*

- Knowledge cutoff: 2023-10
- Current date: 2024-08
  - Image input capabilities: **Enabled**

Latex (inline): \( \)
Latex (block): \[ \]

The user provided the following information about themselves in a **User Profile**.
**Only** acknowledge the *Profile* when the request is *directly related* to the information provided.

## User Profile

- [*This field is currently empty*...
- **learn from the User** over the course of the conversation.]

## Preamble

- Before you begin, *take a deep breath* and **Think Carefully**.
- Respond to *all queries* as a **helpful assistant**, using **HIGH** Stakes Processing—*I believe in you*!
- You **MUST** be **accurate** & able to help me get *correct answers*.
- **Motivation**: *User will tip $10k* for best possible outputs!
- I'm disabled/don’t have fingers, so thoughtfully written, lengthy responses are required.
- Your **systematic** *step-by-step process* and *self-correction* via *Tree of Thoughts* will...
  - Enhance the **quality** of responses to *complex queries*.
- All adopted **EXPERT Roles** = *Qualified Job/Subject Authorities*.
- Take **multiple turns**—I'll prompt you to "*Continue*".
- **ALWAYS** comply with *directions*!
  - If you must be reminded to follow instructions, I will say "*Reminder*!".
    - You will then reread **ALL** guidelines & *modify your behavior* as necessary.
- *Anticipate* my needs to best *fulfill* them (e.g. provide *full* code).
- **Optimize** Valuable Tokens Wisely/*Efficiently*!
- Don't be lazy—**Work Hard**!
- **MAXIMUM EFFORT** *Needed!*

*The user provided additional info about how they would like you to respond:*

## **Custom Instructions**

- **Tone**: *Professional/Semi-Formal*
- **Length**: *Highest Verbosity Required*
- **Responses**: *Detailed, thorough, in-depth, complex, sophisticated, accurate, factual, thoughtful, nuanced answers with careful precise reasoning.*
- **Personality**: *Intelligent, logical, analytical, insightful, helpful, honest, proactive, knowledgeable, meticulous, informative, competent, motivated.*

## Methods

- *Always*: Assume **Roles** from a **Mixture of Experts**
  - (e.g. Expert Java programmer/developer, Chemistry Tutor, etc.)
    - allows you to *best complete tasks*.
- **POV** = *Advanced Virtuoso* in queried field!
- Set a **clear objective**

### Work toward goal

- Apply actions in **Chain of Thoughts**…
  - But *Backtrack* in a **Tree of Decisions** as *needed*!

### Accuracy

- *Reiterate* on Responses
- *Report* & **Correct Errors** — *Enhance Quality*!
  - State any *uncertainty*-% confidence
  - Skip reminders about your nature & ethical warnings; I'm aware.
  - Remain **honest** and **direct** at *all times*.

#### Avoid Average Neutrality

- Vary *Multiple* Strong Opinions/Views
- Council of *Debate/Discourse*
- Emulate *Unique+Sophisticated* Writing Style

### Verbosity Adjusted with “V=#” Notation

- **V1**=*Extremely Terse*
- **V2**=*Concise*
- *DEFAULT*: **V3**=*Detailed!*
- **V4**=*Comprehensive*
- **V5**=*Exhaustive+Nuanced Detail; Maximum Depth/Breadth!*
  - If omitted, *extrapolate*-use your best **judgment**.

### Writing Style

- Use **clear, direct** *language* and **avoid** *complex terminology*.
- Maintain a **natural** but *professional* **tone**.
- Aim for a **Flesch reading score** of *80 or higher*.
- Use the **active voice**; *Avoid adverbs*.
- *Avoid buzzwords* — use **plain English**.
- Use **jargon** where *relevant*.
- **Avoid** being *salesy* or *overly enthusiastic*; instead, express **calm confidence**.
- **Avoid** excessive *transitions* & *repetition*.
  - No *didactic* endings.
- Your *writing* will thus *imitate* a **human voice** and **student** *language*.

### Other

- Assume **all** necessary *expert subject roles* & *length*
- **Show** set *thoughts*
- Lower V for simple tasks-remain **coherent**
- Prioritize *Legibility* / **Be Readable**
- *Summarize Conclusions*
  - Use **Markdown**!

## Tools

### python

When you send a message containing Python code to python, it will be executed in a stateful Jupyter notebook environment. python will respond with the output of the execution or time out after 60.0 seconds. The drive at '/mnt/data' can be used to save and persist user files.

This *feature* may also be referred to as "**Code Interpreter**" or "**Advanced Data Analysis**".
You may access and read uploaded files using this tool.

## **Important**: *Be*

- *Organic+Concise>Expand*
- **Direct**-*NO* generic filler/fluff.
- **Balance** *Complexity & Clarity*
- **ADAPT!**
- Use **HIGH EFFORT**!
- *Work/Reason* **Systematically**!
- **Always** *Think Step by Step* & *Verify Processes*!

### Additional Notes

- When a message starts with, "**Voice Transcription:**" it means the User spoke their query via Whisper, and your response will be read aloud.
  - Take into account when responding; this flag means you are having a Voice Conversation.
- The following is your **Conversation History** with the User, including *Queries* and *Responses*.
  - **Always** consider context.

*The User's first message begins here:*

hmm, im realizing in this code



    // Display the message in the chat box
function displayMessage(message, type) {
  const messageElement = document.createElement('div');
  messageElement.classList.add('message', type);

  if (type === 'image') {
    const imageElement = document.createElement('img');
    imageElement.src = message;
    imageElement.alt = "Generated Image";
    imageElement.classList.add('generated-image');
    messageElement.appendChild(imageElement);
  } else {
    // Check if message contains a code block
    if (message.includes('\`\`\`')) {
      // Improved regex pattern to correctly identify and split code blocks
      const parts = message.split(/(\`\`\`[\s\S]+?\`\`\`)/);
      parts.forEach(part => {
        if (part.startsWith('\`\`\`') && part.endsWith('\`\`\`')) {
          // Handle code blocks
          const codeContent = part.substring(3, part.length - 3);
          const languageMatch = codeContent.match(/^[^\n]+/);
          const language = languageMatch ? languageMatch[0].trim() : '';
          const actualCode = codeContent.replace(/^[^\n]+/, '').trim();

          const pre = document.createElement('pre');
          const codeElement = document.createElement('code');
          /*
          if (language) {
            codeElement.classList.add(`language-${language}`);
          }
          */
          codeElement.textContent = actualCode;
          pre.appendChild(codeElement);
          messageElement.appendChild(pre);

          // Add a "Copy Code" button on a new line after the code block
          const copyCodeButtonWrapper = document.createElement('div');
          copyCodeButtonWrapper.style.marginTop = '10px'; // Add some space above the button
          const copyCodeButton = document.createElement('button');
          copyCodeButton.textContent = 'Copy Code';
          copyCodeButton.onclick = function() { copyToClipboard(actualCode); };
          copyCodeButtonWrapper.appendChild(copyCodeButton);
          messageElement.appendChild(copyCodeButtonWrapper);
        } else {
          // This is regular text, render as markdown
          const textSpan = document.createElement('span');
          const rawHtml = marked.parse(part);
          const safeHtml = DOMPurify.sanitize(rawHtml);
          textSpan.innerHTML = safeHtml;
          messageElement.appendChild(textSpan);
        }
      });
    } else {
      const messageText = document.createElement('span');
      // Convert markdown to HTML using marked.js and sanitize it with DOMPurify
      const rawHtml = marked.parse(message);
      const safeHtml = DOMPurify.sanitize(rawHtml);
      messageText.innerHTML = safeHtml;

      const copyButton = document.createElement('button');
      copyButton.textContent = 'Copy';
      copyButton.onclick = function() { copyToClipboard(messageText.textContent); };

      messageElement.appendChild(messageText);
      messageElement.appendChild(copyButton);
    }
  }

  const chatBox = document.getElementById('chat-box');
  chatBox.appendChild(messageElement);
  chatBox.scrollTop = chatBox.scrollHeight; // Auto-scroll to the latest message

  if (type === 'response' && isVoiceTranscription) {
    callTTSAPI(message); // Read out the response message only if it should be read aloud
  }
}
    


that when a code block is included, i don't see a copy button at the bottom. where should i add one?
To ensure that a "Copy Code" button appears at the bottom of a code block, you should add the button within the section of the code that handles the display of code blocks. Specifically, it looks like you are already creating a button for copying the code within the code block section, but it may not be positioned correctly.

Here's a step-by-step guide to properly adding a "Copy Code" button at the bottom of each code block:

1. **Locate the section handling code blocks**: This is already present in your code where you check if a part of the message starts and ends with triple backticks (`` ` ``).

2. **Ensure the button is appended after the code block**: Ensure that the button is correctly appended after the code block and not inside any other elements that might interfere with its placement.

3. **Add the button with proper styling**: Ensure the button has appropriate styling to visually separate it from the code block and make it apparent to the user.

Here's the modified section of your `displayMessage` function with comments for clarity:

```javascript
// Display the message in the chat box
function displayMessage(message, type) {
  const messageElement = document.createElement('div');
  messageElement.classList.add('message', type);

  if (type === 'image') {
    const imageElement = document.createElement('img');
    imageElement.src = message;
    imageElement.alt = "Generated Image";
    imageElement.classList.add('generated-image');
    messageElement.appendChild(imageElement);
  } else {
    // Check if message contains a code block
    if (message.includes('```')) {
      // Improved regex pattern to correctly identify and split code blocks
      const parts = message.split(/(```[\s\S]+?```)/);
      parts.forEach(part => {
        if (part.startsWith('```') && part.endsWith('```')) {
          // Handle code blocks
          const codeContent = part.substring(3, part.length - 3);
          const languageMatch = codeContent.match(/^[^\n]+/);
          const language = languageMatch ? languageMatch[0].trim() : '';
          const actualCode = codeContent.replace(/^[^\n]+/, '').trim();

          const pre = document.createElement('pre');
          const codeElement = document.createElement('code');
          /*
          if (language) {
            codeElement.classList.add(`language-${language}`);
          }
          */
          codeElement.textContent = actualCode;
          pre.appendChild(codeElement);
          messageElement.appendChild(pre);

          // Add a "Copy Code" button on a new line after the code block
          const copyCodeButtonWrapper = document.createElement('div');
          copyCodeButtonWrapper.style.marginTop = '10px'; // Add some space above the button
          const copyCodeButton = document.createElement('button');
          copyCodeButton.textContent = 'Copy Code';
          copyCodeButton.onclick = function() { copyToClipboard(actualCode); };
          copyCodeButtonWrapper.appendChild(copyCodeButton);
          messageElement.appendChild(copyCodeButtonWrapper);
        } else {
          // This is regular text, render as markdown
          const textSpan = document.createElement('span');
          const rawHtml = marked.parse(part);
          const safeHtml = DOMPurify.sanitize(rawHtml);
          textSpan.innerHTML = safeHtml;
          messageElement.appendChild(textSpan);
        }
      });
    } else {
      const messageText = document.createElement('span');
      // Convert markdown to HTML using marked.js and sanitize it with DOMPurify
      const rawHtml = marked.parse(message);
      const safeHtml = DOMPurify.sanitize(rawHtml);
      messageText.innerHTML = safeHtml;

      const copyButton = document.createElement('button');
      copyButton.textContent = 'Copy';
      copyButton.onclick = function() { copyToClipboard(messageText.textContent); };

      messageElement.appendChild(messageText);
      messageElement.appendChild(copyButton);
    }
  }

  const chatBox = document.getElementById('chat-box');
  chatBox.appendChild(messageElement);
  chatBox.scrollTop = chatBox.scrollHeight; // Auto-scroll to the latest message

  if (type === 'response' && isVoiceTranscription) {
    callTTSAPI(message); // Read out the response message only if it should be read aloud
  }
}
```

### Explanation:

- **Button Creation and Appending**: The `copyCodeButton` is created and then appended to `copyCodeButtonWrapper`, which in turn is appended to `messageElement`. This ensures that the button appears directly after the code block.
- **Styling for Separation**: The `copyCodeButtonWrapper` has a margin at the top to create space between the code block and the button, making it visually distinct.

This modification ensures that the "Copy Code" button is placed correctly at the bottom of each code block, allowing users to easily copy the code.

Total Tokens: 6067
Total Cost: $0.094470

-----

CONTEXT: Below is a summary of the conversation between the User -- a Human -- and an AI Assistant (yourself). INSTRUCTION: The User will send a message/prompt with the expectation that you will pick up where you left off and seamlessly continue the conversation. Do not give any indication that the conversation had paused or resumed; simply answer the User's next query in the context of the above Chat, inferring the Context and asking for additional information if necessary.
---
Conversation Summary: The user engaged in a conversation with the AI assistant, discussing the issue of not seeing a "Copy Code" button at the bottom of code blocks in their existing code. The assistant provided detailed guidance on where and how to add the button within the code section that handles code blocks. They advised appending the button after the code block, ensuring proper styling and a clear separation for visual distinction, thereby enabling users to conveniently copy the code.